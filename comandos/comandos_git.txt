git init . -> cria um repo na pasta atual
git status -> mostra o status do trabalho (de cada arquivo)
git add <nome_arquivo> -> adiciona arquivo para ser commitado
git commit -m "msg" -> faz commit do que estava para ser commitado
git log -> mostra todo o histórico de commits
git diff <nome do arquivo> -> mostra a diferença de estado, o que foi modificado e não foi comitado
git reset <nome do arquivo que eu não quero>
git checkout -b <secundaria> -> cria uma nova branch (secundária) e muda o ramo em que o git está trabalhando. Com isso, eu isolo os arquivos da principal.
git checkout <nome da branch> -> troca de branch 
git merge <nome da branch> -> eu trago todas as alterações, não todos os arquivos.
git branch -d secundaria (não posso estar na branch secundária para deletá-la)
git push origin main -> para enviar o arquivo do repositório local para a origem
git pull origin main -> puxar do remoto/origem o main que foi feito inicialmente

## FLUXO DE TRABALHO
1. criar diretório do projeto
2. iniciar o git dentro do diretório criado (git init .)
3. editar ou criar arquivos 
4. git status
5. git add <nome arquivo>
6. git status
7. git commit-m "msg"
8. git status
9. volta para o passo 3